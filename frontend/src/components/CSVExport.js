import React from 'react';

const CSVExport = ({ analyticsData, kpis }) => {
  const exportToCSV = () => {
    if (!analyticsData?.data) {
      alert('No data available to export');
      return;
    }
    
    const csvData = analyticsData.data.map(event => ({
      'Event Type': event.eventType,
      'User ID': event.userId,
      'Timestamp': event.timestamp,
      'Date': new Date(event.timestamp).toLocaleDateString(),
      'Time': new Date(event.timestamp).toLocaleTimeString(),
      'Page': event.eventData?.page || 'N/A',
      'Value': event.eventData?.value || 0
    }));
    
    // Add summary row at the top
    const summaryData = {
      'Event Type': '=== SUMMARY ===',
      'User ID': `Total Events: ${csvData.length}`,
      'Timestamp': `Export Date: ${new Date().toISOString()}`,
      'Date': `Unique Users: ${kpis?.uniqueUsers || 'N/A'}`,
      'Time': `Event Types: ${kpis?.uniqueEventTypes || 'N/A'}`,
      'Page': `Avg/Hour: ${kpis?.avgPerHour || 'N/A'}`,
      'Value': 'Generated by Analytics Platform'
    };
    
    const allData = [summaryData, {}, ...csvData]; // Empty row for separation
    
    const headers = Object.keys(csvData[0]);
    const csvContent = [
      headers.join(','),
      ...allData.map(row => 
        headers.map(header => {
          const value = row[header] || '';
          // Escape commas and quotes
          return `"${String(value).replace(/"/g, '""')}"`;
        }).join(',')
      )
    ].join('\n');
    
    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    
    if (link.download !== undefined) {
      const url = URL.createObjectURL(blob);
      link.setAttribute('href', url);
      link.setAttribute('download', `analytics-data-${new Date().toISOString().split('T')[0]}.csv`);
      link.style.visibility = 'hidden';
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
    }
  };

  return (
    <button
      onClick={exportToCSV}
      className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition-colors duration-200"
    >
      <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
      </svg>
      Export CSV Data
    </button>
  );
};

export default CSVExport;
